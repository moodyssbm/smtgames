{"version":3,"sources":["img sync /^/.//.*$","img/ddsmt.png","img/ddsmtii.png","img/smt.jpg","img/smtif.jpg","img/smtii.jpg","img/smtnine.png","Home.js","About.js","NoMatch.js","Layout.js","Navi.js","App.js","serviceWorker.js","index.js"],"names":["map","./ddsmt.png","./ddsmtii.png","./smt.jpg","./smtif.jpg","./smtii.jpg","./smtnine.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Home","state","game","s","retClass","n","require","_this2","this","db","gameName","react_default","a","createElement","Fragment","className","progress","status","console","series","desc","href","link","team","val","index","comma","getCreator","other","extra","current","onClick","setState","alt","image","src","React","Component","About","date","Date","getFullYear","NoMatch","Layout","Container","props","children","Styles","styled","div","_templateObject","Navi","Navbar","expand","Brand","react_router_dom","to","Toggle","aria-controls","Collapse","Nav","Item","Link","App","Navi_Navi","Layout_Layout","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dab83c95.chunk.js","sourcesContent":["var map = {\n\t\"./ddsmt.png\": 60,\n\t\"./ddsmtii.png\": 61,\n\t\"./smt.jpg\": 62,\n\t\"./smtif.jpg\": 63,\n\t\"./smtii.jpg\": 64,\n\t\"./smtnine.png\": 65\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 59;","module.exports = __webpack_public_path__ + \"static/media/ddsmt.0e69ebc7.png\";","module.exports = __webpack_public_path__ + \"static/media/ddsmtii.c1a71515.png\";","module.exports = __webpack_public_path__ + \"static/media/smt.04d7dc82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/smtif.18ef2ea5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/smtii.49dadf17.jpg\";","module.exports = __webpack_public_path__ + \"static/media/smtnine.a6aea283.png\";","import React from 'react';\nimport './Home.css';\n\nexport default class Home extends React.Component {\n    state = {\n        game: \"Digital Devil Story: Megami Tensei\"\n    }\n\n    progress(s) {\n        let retClass = '';\n\n        switch(s) {\n            case 'Fan':\n                retClass = 'green';\n                break;\n            case 'WIP':\n                retClass = 'yellow';\n                break;\n            case 'NoTrans':\n                retClass = 'red';\n                break;\n            case 'Official':\n                retClass = 'blue';\n                break;\n            case 'Irrelevant':\n                retClass = 'purple';\n                break;\n            default:\n                break;\n        }\n\n        return retClass;\n    }\n\n    getCreator(n) {\n        let creators = require('./creators.json');\n\n        return(creators[n]);\n    }\n\n    render() {\n        let db = require('./games.json');\n        let keys = Object.keys(db);\n        let gameName = this.state.game;\n\n        return(\n            <React.Fragment>\n                <table className=\"table table-striped table-bordered\">\n                    <tbody>\n                        <tr>\n                            <th>Game Title</th>\n                            <td>{gameName}</td>\n                        </tr>\n                        <tr>\n                            <th>Best Version</th>\n                            <td className={this.progress(db[gameName].status)}>{db[gameName].console}</td>\n                        </tr>\n                        <tr>\n                            <th>Sub-Series</th>\n                            <td>{db[gameName].series}</td>\n                        </tr>\n                        <tr>\n                            <th>Description</th>\n                            <td>{db[gameName].desc}</td>\n                        </tr>\n                        <tr>\n                            <th>Release Information</th>\n                            <td>\n                                <a href={db[gameName].link}>Click Me!</a>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>Released By</th>\n                            <td>\n                            {\n                                    db[gameName].team.map((val, index) => {\n                                        let comma = '';\n                                        if(index) { comma = ', ' }\n                                        return(<a href={this.getCreator(val)}>{comma}{val}</a>)\n                                    })\n                                }\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>Other Versions</th>\n                            <td>\n                                {\n                                    db[gameName].other.map((val, index) => {\n                                        let comma = '';\n                                        if(index > 0) { comma = ', '}\n                                        return(<a href={db[gameName].other[index].link} className={this.progress(db[gameName].other[index].status)}>{comma}{db[gameName].other[index].console}</a>)\n                                    })\n                                }\n                            </td>\n                        </tr>\n                        <tr>\n                            <th>Additional Comments</th>\n                            <td>{db[gameName].extra}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div className=\"gameContainer\">\n                    {\n                        keys.map((val, index) => {\n                            let current = db[val];\n                            //eslint-disable-next-line\n                            return(<a href=\"#\" onClick={() => {this.setState({game: val})}}><img className=\"image\" alt={current.image} src={require('./img/' + current.image)}/></a>);\n                        })\n                    }\n                </div>\n                <div className=\"legend\">\n                    Legend<br/>\n                    <span className=\"blue\">Official</span>,\n                    <span className=\"green\"> Completed Fan Translation</span>,\n                    <span className=\"yellow\"> WIP</span>,\n                    <span className=\"red\"> No English Version Available</span>,\n                    <span className=\"purple\"> No Translation Necessary</span>\n                </div>\n            </React.Fragment>\n        );\n    }\n}","import React from 'react';\n\nexport default class About extends React.Component {\n    render() {\n        let date = new Date();\n        return(\n            <React.Fragment>\n                <h1>About This Site</h1>\n                <p>This site was started in 2019 (aka \"The Year of Megaten\") to provide users with an easy to access place with all the information they'll need to get started with each of the games in the series. This includes important data like which release of any given game is the superior version, whether or not a game has an official translation, console and developer information, where to find fan-made patches, and much more.</p>\n                <p>This site is maintained by Moody from Grey Cart. It is automatically generated using a JSON file that contains all the metadata for each release. If a piece of information is outdated or incorrect, please email moody@greycart.gg</p>\n                <p>Grey Cart, {date.getFullYear()}</p>\n            </React.Fragment>\n        );\n    }\n}","import React from 'react';\n\nexport default class NoMatch extends React.Component {\n    render() {\n        return(\n            <h1>404 - Page Not Found</h1>\n        );\n    }\n}","import React from 'react';\nimport {Container} from 'react-bootstrap';\n\nexport default class Layout extends React.Component {\n    render() {\n        return(\n            <Container>\n                {this.props.children}\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport {Nav, Navbar} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: #222222;\n    }\n\n    a, .navbar-brand, .navbar-nav .nav-link {\n        color: #bbbbbb;\n\n        &:hover {\n            color: white;\n            text-decoration: none;\n        }\n    }\n`;\n\nexport default class Navi extends React.Component {\n    render() {\n        return(\n            <Styles>\n                <Navbar expand=\"lg\">\n                    <Navbar.Brand>\n                        <Link to=\"/\">Megaten</Link>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <Nav.Item>\n                                <Nav.Link>\n                                    <Link to=\"/\">Home</Link>\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link>\n                                    <Link to=\"/about\">About</Link>\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </Styles>\n        );\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Home.js';\nimport About from './About.js';\nimport NoMatch from './NoMatch';\nimport Layout from './Layout.js';\nimport Navi from './Navi.js';\n\nexport default class App extends React.Component {\n  render() {\n    return(\n      <React.Fragment>\n        <Router>\n          <Navi />\n          <Layout>\n            <Switch>\n              <Route exact path=\"/smtgames/\" component={Home} />\n              <Route path=\"/smtgames/about\" component={About} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Layout>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}